# Generated by Django 3.2.18 on 2024-12-11 08:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('User', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='User.customuser')),
                ('name', models.CharField(blank=True, default='User', max_length=100)),
                ('profile_img', models.ImageField(default='/Admins/doctor.jpg', upload_to='Admins')),
                ('bio', models.CharField(blank=True, default='User Here', max_length=100)),
                ('SpecialInformation', models.TextField(blank=True, null=True)),
                ('IsDoctor', models.BooleanField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('Organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='administrators', to='User.organization')),
                ('Specialist', models.ManyToManyField(blank=True, null=True, related_name='administrators', to='User.Specialist')),
            ],
            options={
                'verbose_name': '02_Administrator',
                'verbose_name_plural': '02_Administrators',
                'ordering': ['id'],
            },
            bases=('User.customuser',),
        ),
    ]
